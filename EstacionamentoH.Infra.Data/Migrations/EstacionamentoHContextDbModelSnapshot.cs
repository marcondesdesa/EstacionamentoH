// <auto-generated />
using System;
using EstacionamentoH.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EstacionamentoH.Infra.Data.Migrations
{
    [DbContext(typeof(EstacionamentoHContextDb))]
    partial class EstacionamentoHContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Condutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataUltimoLancamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SaldoMinuto")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Condutores");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Estacionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CondutorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("DataSaida")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrecoId")
                        .HasColumnType("int");

                    b.Property<int>("VeiculoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CondutorId");

                    b.HasIndex("PrecoId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Estacionamentos");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Dia0")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia1")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia2")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia3")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia4")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia5")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<bool>("Dia6")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("0");

                    b.Property<TimeSpan>("HoraFinal")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HoraInicial")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Preco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime2");

                    b.Property<int>("Tolerancia")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorHoraAdicional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorHoraInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Precos");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Modelo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Estacionamento", b =>
                {
                    b.HasOne("EstacionamentoH.Domain.Entities.Condutor", "Condutor")
                        .WithMany("Estacionamentos")
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstacionamentoH.Domain.Entities.Preco", "Preco")
                        .WithMany("Estacionamentos")
                        .HasForeignKey("PrecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EstacionamentoH.Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Estacionamentos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Condutor");

                    b.Navigation("Preco");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Condutor", b =>
                {
                    b.Navigation("Estacionamentos");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Preco", b =>
                {
                    b.Navigation("Estacionamentos");
                });

            modelBuilder.Entity("EstacionamentoH.Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Estacionamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
